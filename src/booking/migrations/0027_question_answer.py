# Generated by Django 5.1.5 on 2025-03-30 16:21

import django.db.models.deletion
import razexOne.storages
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('booking', '0026_venuelayout_image_height_venuelayout_image_width'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(help_text='This is the question that will be asked to the buyer.', verbose_name='Question')),
                ('help_text', models.TextField(blank=True, help_text='If the question needs to be explained or clarified, do it here!', null=True, verbose_name='Help text')),
                ('type', models.CharField(choices=[('N', 'Number'), ('S', 'Text (one line)'), ('T', 'Multiline text'), ('B', 'Yes/No'), ('F', 'File upload'), ('D', 'Date'), ('H', 'Time'), ('W', 'Date and time'), ('TEL', 'Phone number')], max_length=5, verbose_name='Question type')),
                ('required', models.BooleanField(default=False, verbose_name='Required question')),
                ('can_modify_later', models.BooleanField(default=False, verbose_name='Can modify after order is placed')),
                ('all_products', models.BooleanField(default=False, help_text='This question will be asked to buyers of all products in this event. If you select specific products, this question will only be asked for those.', verbose_name='All products')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Position')),
                ('hidden', models.BooleanField(default=False, help_text='This question will only show up in the backend.', verbose_name='Hidden question')),
                ('valid_number_min', models.DecimalField(blank=True, decimal_places=6, help_text='Currently not supported in our apps and during check-in', max_digits=30, null=True, verbose_name='Minimum value')),
                ('valid_number_max', models.DecimalField(blank=True, decimal_places=6, help_text='Currently not supported in our apps and during check-in', max_digits=30, null=True, verbose_name='Maximum value')),
                ('valid_date_min', models.DateField(blank=True, help_text='Currently not supported in our apps and during check-in', null=True, verbose_name='Minimum value')),
                ('valid_date_max', models.DateField(blank=True, help_text='Currently not supported in our apps and during check-in', null=True, verbose_name='Maximum value')),
                ('valid_datetime_min', models.DateTimeField(blank=True, help_text='Currently not supported in our apps and during check-in', null=True, verbose_name='Minimum value')),
                ('valid_datetime_max', models.DateTimeField(blank=True, help_text='Currently not supported in our apps and during check-in', null=True, verbose_name='Maximum value')),
                ('valid_string_length_max', models.PositiveIntegerField(blank=True, help_text='Currently not supported in our apps and during check-in', null=True, verbose_name='Maximum length')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='booking.event')),
                ('products', models.ManyToManyField(blank=True, help_text='This question will be asked to buyers of the selected products', related_name='questions', to='booking.product', verbose_name='Products')),
            ],
            options={
                'ordering': ('position', 'question_id'),
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('answer_id', models.AutoField(primary_key=True, serialize=False)),
                ('answer', models.TextField()),
                ('file', models.FileField(blank=True, null=True, storage=razexOne.storages.PublicMediaStorage, upload_to='answers/')),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='booking.cart')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='booking.order')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='booking.question')),
            ],
            options={
                'unique_together': {('cart', 'question'), ('order', 'question')},
            },
        ),
    ]
